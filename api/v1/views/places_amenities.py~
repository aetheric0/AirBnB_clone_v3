#!/usr/bin/python3
""" View for link between Place objects and Amenity Object
"""

from flask import jsonify, abort
from api.v1.views import app_views
from models import storage
from models.place import Place
from models.amenity import Amenity


@app_views.route('/places/<place_id>/amenities', strict_slashes=False)
def get_amenity_by_place(place_id):
    place = storage.get(Place, place_id)
    if place:
        retrieved_amenities = []
        for amenity in place.amenities:
            retrieved_amenities.append(amenity.to_dict())
        return jsonify(retrieved_amenities), 200
    abort(404)


@app_views.route('/places/<place_id>/amenities/<amenity_id>',
                 methods=['DELETE'], strict_slashes=False)
def delete_amenity_by_place(place_id, amenity_id):
    place = storage.get(Place, place_id)
    if place:
        for amenity in place.amenities:
            if amenity.id == amenity_id:
                storage.delete(amenity)
                storage.save()
                return jsonify({}), 200
    abort(404)


@app_views.route('/places/<place_id>/amenities/<amenity_id>',
                 methods=['POST'], strict_slashes=False)
def post_amenity_by_place(place_id, amenity_id):
    place = storage.get(Place, place_id)
    amenity = storage.get(Amenity, amenity_id)
    if place is None or amenity is None:
        abort(404)
    for amenity in place.amenities:
        if amenity.id == amenity_id:
            return jsonify(amenity.to_dict()), 200
    amenity.place_id = place_id
    place.amenities.append(amenity)
    place.save()
    return jsonify(amenity.to_dict(), 201)
